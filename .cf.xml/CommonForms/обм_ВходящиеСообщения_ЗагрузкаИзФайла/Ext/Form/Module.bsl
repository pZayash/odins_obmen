&НаКлиенте
Асинх Процедура ПутьКФайлуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;

	ОбещаниеВыбораФайлов = 
		ВыбратьФайлы(
			ЗагрузкаФайла_Настройки.ВыборФайлов_Заголовок,
			ЗагрузкаФайла_Настройки.ВыборФайлов_Фильтр,
			ЗагрузкаФайла_Настройки.ВыборФайлов_МножественныйВыбор
			);

	ВыбранныеФайлы = Ждать ОбещаниеВыбораФайлов;
	
	Если ТипЗнч(ВыбранныеФайлы) = Тип("Массив") Тогда
		ПутьКФайлу = СтрСоединить(ВыбранныеФайлы, ";");
		
	КонецЕсли;	
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьНаСервере(соотвДвоичныеДанныеФайлов)
	
	Для Каждого Пара Из соотвДвоичныеДанныеФайлов Цикл  
		
		обОшибкеПользователю = Неопределено;
		ИмяФайла = Пара.Ключ;
		ДвоичныеДанныеФайла = Пара.Значение;
		
		Попытка
			
			ПараметрыЗапроса = Новый Структура;
			ПараметрыЗапроса.Вставить("Узел", ЗагрузкаФайла_Настройки.Узел);
			
			Файл = Новый Файл(ИмяФайла);
			ПараметрыЗапроса.Вставить("Файл_Имя", Файл.Имя);
			ПараметрыЗапроса.Вставить("Файл_ИмяБезРасширения", Файл.ИмяБезРасширения);
			ПараметрыЗапроса.Вставить("Файл_ПолноеИмя", Файл.ПолноеИмя);
			ПараметрыЗапроса.Вставить("Файл_Путь", Файл.Путь);
			ПараметрыЗапроса.Вставить("Файл_Расширение", НРег(Файл.Расширение));
			
			ОбрабатыватьСразу = Ложь;
			Если 
					ЗагрузкаФайла_Настройки.Свойство("ОбрабатыватьВыбранныеФайлыСтразу")
				И	ТипЗнч(ЗагрузкаФайла_Настройки.ОбрабатыватьВыбранныеФайлыСтразу) = Тип("Булево") 
			Тогда
				ОбрабатыватьСразу = ЗагрузкаФайла_Настройки.ОбрабатыватьВыбранныеФайлыСтразу;
				
			КонецЕсли;
			
			ЭтоТекст = НРег(Файл.Расширение) = ".txt" Или НРег(Файл.Расширение) = ".csv" Или НРег(Файл.Расширение) = ".xml";
			
			СодержимоеФайла = Неопределено;
			Если ЭтоТекст Тогда
				СодержимоеФайла = ПолучитьСтрокуИзДвоичныхДанных(ДвоичныеДанныеФайла);
				
			Иначе
				СодержимоеФайла = ДвоичныеДанныеФайла;
				
			КонецЕсли;			
					
			Ответ =
				обм.ВходящееСообщение_СоздатьЧерезHTTPЗапросЭмуляция(
						ЗагрузкаФайла_Настройки.URI,
						СодержимоеФайла,
						ПараметрыЗапроса,
						ЗагрузкаФайла_Настройки.Представление,
						ОбрабатыватьСразу 
						); 
									
			Если Ответ.КодСостояния = 200 Тогда
				входящееСообщениеСсылка = обм.ВходящееСообщение_СсылкаПоHTTPСервисОтвет(Ответ);
				
				Если Общ.ЭтоЗаполненнаяСсылка(входящееСообщениеСсылка, Тип("СправочникСсылка.обм_ВходящиеСообщения")) Тогда 
					
					// Получить статус входящего запроса
					Запрос = Новый Запрос;
					Запрос.УстановитьПараметр("входящееСообщение", входящееСообщениеСсылка);
					Запрос.Текст = 
					"ВЫБРАТЬ РАЗРЕШЕННЫЕ
					|	Т.Статус КАК Статус,
					|	Т.Примечание КАК Примечание
					|ИЗ
					|	РегистрСведений.обм_ВходящиеСообщения_Статусы.СрезПоследних(, ВходящееСообщение = &входящееСообщение) КАК Т";
					
					стрРезультатЗагрузки = Неопределено;
					Выборка = Запрос.Выполнить().Выбрать();
					Если Выборка.Следующий() Тогда
						стрРезультатЗагрузки = 
							СтрШаблон(
								"Статус загруженных данных: %1
								|%2",
								Выборка.Статус, // %1
								Выборка.Примечание // %2
								);
						
					Иначе
						стрРезультатЗагрузки = "Данных о статусе загруженных данных нет";
						
					КонецЕсли;
					
					сообщение = Новый СообщениеПользователю;
					сообщение.Текст = 
						СтрШаблон(
							"Файл %1 загружен:
							|%2",
							ИмяФайла,
							стрРезультатЗагрузки
							);
							
					сообщение.Поле = "ПутьКФайлу";
					сообщение.Сообщить(); 
					
				Иначе
					обОшибкеПользователю = "Причина не известна, данные не записаны"
					
				КонецЕсли;
				
			Иначе
				обОшибкеПользователю = обм.ВходящееСообщение_ОшибкаИзHTTPСервисОтвет(Ответ); 
				
			КонецЕсли;
			
		Исключение
			инфоОшибки = ИнформацияОбОшибке();
			имяСобытия = обм.ИмяСобытияЖурналаРегистрации("Получение.ЗагрузкаИзФайла");
			обОшибкеВЖурнал =
				СтрШаблон(
					"Ошибка при загрузке данных из файла '%1' в очередь входящих запросов  
					|по причине: %2",
					ИмяФайла, // %1
					общ.Ошибка_ПодробноеПредставление(инфоОшибки) // %2
					); 
			
			общ.Ошибка_ВЖурналРегистрации(имяСобытия, обОшибкеВЖурнал);
			
			обОшибкеПользователю = общ.Ошибка_КраткоеПредставление(инфоОшибки);
			
		КонецПопытки;
		
		Если ЗначениеЗаполнено(обОшибкеПользователю) Тогда 
			сообщение = Новый СообщениеПользователю;
			сообщение.Текст = 
					СтрШаблон(
						"Файл %1 не загружен
						|по причине: %2",
						ИмяФайла, // %1
						обОшибкеПользователю // %2
						); 
						
			сообщение.Поле = "ПутьКФайлу";
			сообщение.Сообщить();
					
		КонецЕсли;

	КонецЦикла;
	Пара = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура Загрузить(Команда)
	
	Если ПустаяСтрока(ПутьКФайлу) Тогда
		Возврат;
		
	КонецЕсли;
	
	соотвДвоичныеДанныеФайлов = Новый Соответствие;
	
	МассивИменФайлов = СтрРазделить(ПутьКФайлу, ";");
	
	Для Каждого ИмяФайла Из МассивИменФайлов Цикл
		Файл = Новый Файл(ИмяФайла);
	    ОбещаниеПроверкаФайла = Файл.СуществуетАсинх();
	     Файл_Существует = Ждать ОбещаниеПроверкаФайла;
	
		Если Файл_Существует Тогда
			соотвДвоичныеДанныеФайлов.Вставить(ИмяФайла, Новый ДвоичныеДанные(ИмяФайла));
		
		КонецЕсли;
		
	КонецЦикла;
	ИмяФайла = Неопределено;
	
	ЗагрузитьНаСервере(соотвДвоичныеДанныеФайлов);
	
	ОповеститьОбИзменении(Тип("СправочникСсылка.обм_ВходящиеСообщения"));
	
	ЭтаФорма.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗагрузкаФайла_Настройки = Параметры.ЗагрузкаФайла_Настройки;
	
	ЭтаФорма.АвтоЗаголовок = Ложь;
	ЭтаФОрма.Заголовок = ЗагрузкаФайла_Настройки.ИмяФормы;
	
КонецПроцедуры

&НаКлиенте
Асинх Функция ВыбратьФайлы(пЗаголовок = "", пФильтр = "", МножественныйВыбор = Истина) Экспорт
	
	Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	
	Если Не ПустаяСтрока(пФильтр) Тогда
		Диалог.Фильтр = пФильтр;
		
	Иначе
		Диалог.Фильтр = "Таблица excel (*.xls)|*.xls*";

	КонецЕсли;
	
	Если Не ПустаяСтрока(пЗаголовок) Тогда
		Диалог.Заголовок = пЗаголовок;
		
	КонецЕсли;
		
	Диалог.МножественныйВыбор = МножественныйВыбор;
	ОбещаниеВыбораФайлов = Диалог.ВыбратьАсинх();
	ВыбранныеФайлы = Ждать ОбещаниеВыбораФайлов;
	
	Возврат ВыбранныеФайлы;
	
КонецФункции

