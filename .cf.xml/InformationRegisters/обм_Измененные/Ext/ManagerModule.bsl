#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
Процедура Зарегистрировать(пИсточникСсылка, пУзелОтправитель = Неопределено, пКатегория = Неопределено, пИдентификатор = Неопределено) Экспорт

	запись = РегистрыСведений.обм_Измененные.СоздатьМенеджерЗаписи();

	запись.Ссылка = пИсточникСсылка;
	запись.ДатаВремя = общ.ДатаУниверсальная();
	запись.ВерсияДанных = пИсточникСсылка.ВерсияДанных;
	запись.УзелОтправитель = пУзелОтправитель;
	запись.Категория = пКатегория;
	запись.Идентификатор = пИдентификатор;
	
	УстановитьПривилегированныйРежим(Истина);
	запись.Записать(Истина);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура КОтправке(пИсточникСсылка, пВерсияДанных, пУдалитьРегистрацию = Истина) Экспорт
	
	Попытка
		НачатьТранзакцию();
	
		исходящиеСообщения = Справочники.обм_ИсходящиеСообщения.СоздатьПоСсылкам(пИсточникСсылка);
				
		Справочники.обм_ИсходящиеСообщения.ЗарегистрироватьКОтправке(исходящиеСообщения);

		Если пУдалитьРегистрацию Тогда
			РегистрыСведений.обм_Измененные.УдалитьРегистрацию(пИсточникСсылка, пВерсияДанных);
			
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;

КонецПроцедуры

Процедура УдалитьРегистрацию(пОбъект, пВерсияДанных = Неопределено) Экспорт

	объектСсылка = общ.Ссылка_ПоОбъекту(пОбъект);

	Если объектСсылка = Неопределено Тогда
		Возврат;
		
	КонецЕсли;
	
	блокировка = Новый БлокировкаДанных;
	имяТаблицы = общ.Объект_ИмяТаблицы(Метаданные.РегистрыСведений.обм_Измененные);
	блокЭлемент = блокировка.Добавить(имяТаблицы);
	блокЭлемент.Режим = РежимБлокировкиДанных.Исключительный;
	блокЭлемент.УстановитьЗначение("Ссылка", объектСсылка);
	
	НачатьТранзакцию();
	Попытка
		блокировка.Заблокировать();
		запись = РегистрыСведений.обм_Измененные.СоздатьМенеджерЗаписи();
		запись.Ссылка = объектСсылка;
	
		// Контроль версии данных, если она передана в параметре
		Если Не ПустаяСтрока(пВерсияДанных) Тогда
			запись.Прочитать();
		
			// Удалять только если версия данных не изменилась
			Если запись.Выбран() И запись.ВерсияДанных = пВерсияДанных Тогда
				запись.Удалить();
				
			КонецЕсли;
			
		Иначе // ПустаяСтрока(пВерсияДанных)
			запись.Удалить();
			
		КонецЕсли; 
	
		ЗафиксироватьТранзакцию();
		
	Исключение
		ОтменитьТранзакцию();
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецЕсли // #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
