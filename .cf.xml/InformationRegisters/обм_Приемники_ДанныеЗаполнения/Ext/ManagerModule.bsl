Процедура Связать(пСсылкаПриемник, пДанныеЗаполнения) Экспорт  
	
	// Для контекстной подсказки
	Если Ложь Тогда
		пДанныеЗаполнения = Справочники.обм_ДанныеЗаполнения.ПустаяСсылка();
		
	КонецЕсли; 

	Если Не общ.ЭтоЗаполненнаяСсылка(пСсылкаПриемник) Тогда
		Возврат;
		
	КонецЕсли; 
	
	Если Не общ.ЭтоЗаполненнаяСсылка(пДанныеЗаполнения, Тип("СправочникСсылка.обм_ДанныеЗаполнения")) Или Не общ.СсылкаСуществует(пДанныеЗаполнения) Тогда
		Возврат;
		
	КонецЕсли;
	
	// Необходимо вызвать запись объекта Справочник.обм_ДанныеЗаполнения из параметра пДанныеЗаполнения
	// Чтобы в процедуре ПриЗаписи объекта были обновлены реквизиты до консистентного состояния
		данныеЗаполненияОбъект = пДанныеЗаполнения.ПолучитьОбъект();
	    Если ТипЗнч(данныеЗаполненияОбъект) = Тип("СправочникОбъект.обм_ДанныеЗаполнения") И Не ЗначениеЗаполнено(данныеЗаполненияОбъект.Родитель) Тогда 
			данныеЗаполненияОбъект.Приемник = пСсылкаПриемник;
			данныеЗаполненияОбъект.Записать(); 
			
		КонецЕсли;
		данныеЗаполненияОбъект = Неопределено;
		
	// Зафиксировать заполненного приемника в регистре
		// Получить последние данные
		зпрс = Новый Запрос;
		зпрс.УстановитьПараметр("Приемник", пСсылкаПриемник);
		зпрс.Текст = 
		"ВЫБРАТЬ
		|	Т.Приемник КАК Приемник,
		|	Т.ДанныеЗаполнения КАК Данные,
		|	Т.ДатаВремя КАК ДатаВремя,
		|	Т.Данные_sha256 КАК Данные_sha256,
		|	Т.Данные_Длина КАК Данные_Длина,
		|	Т.Приемник_sha256 КАК Приемник_sha256
		|ИЗ
		|	РегистрСведений.обм_Приемники_ДанныеЗаполнения.СрезПоследних(, Приемник = &Приемник) КАК Т";	
		вбрк = зпрс.Выполнить().Выбрать();
		
		данныеЗаполненияИзменены = Истина;  
		Если вбрк.Следующий() Тогда 
			данныеЗаполненияИзменены = 
					вбрк.Данные <> пДанныеЗаполнения
				Или вбрк.ДатаВремя <> пДанныеЗаполнения.ДатаВремя
				Или вбрк.Данные_sha256 <> пДанныеЗаполнения.Данные_sha256
				Или вбрк.Данные_Длина <> пДанныеЗаполнения.Данные_Длина
				Или вбрк.Приемник_sha256 <> пДанныеЗаполнения.Приемник_sha256
				;
			
		КонецЕсли;
		
		Если Не данныеЗаполненияИзменены Тогда
			Возврат;
			
		КонецЕсли;

		мз = РегистрыСведений.обм_Приемники_ДанныеЗаполнения.СоздатьМенеджерЗаписи();
		мз.Период = ТекущаяДата();
		мз.Приемник = пСсылкаПриемник;
		мз.ДанныеЗаполнения = пДанныеЗаполнения;
		мз.ДатаВремя = пДанныеЗаполнения.ДатаВремя;
		мз.Данные_sha256 = пДанныеЗаполнения.Данные_sha256;
		мз.Данные_Длина = пДанныеЗаполнения.Данные_Длина; 
		мз.Приемник_sha256 = пДанныеЗаполнения.Приемник_sha256;
		мз.Записать(); 
	
КонецПроцедуры

