#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеДиалогом();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДобавитьЗапросом(Команда)
	
	текстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1 Ссылка ИЗ ";
	оповещениеОВводе = Новый ОписаниеОповещения("ДобавитьЗапросом_ЗавершениеВводаТекстаЗапроса", ЭтотОбъект);
	ПоказатьВводЗначения(оповещениеОВводе, текстЗапроса, "Введите текст запроса", Тип("Строка"));
	
КонецПроцедуры
	
&НаКлиенте
Процедура ДобавитьЗапросом_ЗавершениеВводаТекстаЗапроса(пТекстЗапроса, ДопПараметры = Неопределено) Экспорт
	
	Если ПустаяСтрока(пТекстЗапроса) Тогда
		Возврат;
		
	КонецЕсли;

	ДобавитьЗапросомНаСервере(пТекстЗапроса);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры 

&НаСервереБезКонтекста
Процедура ДобавитьЗапросомНаСервере(пТекстЗапроса)
	
	запрос = Новый Запрос;
	запрос.Текст = пТекстЗапроса;
	выборка = Запрос.Выполнить().Выбрать();
	
	Пока выборка.Следующий() Цикл
		Справочники.обм_ИсходящиеСообщения.СоздатьПоСсылкеИсточника(выборка.Ссылка);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСписокОбработчиков(Команда)
	
	ОткрытьФорму("Справочник.общ_Обработчики.ФормаСписка");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПослание(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
		
	КонецЕсли;
	
	ОтправитьПосланиеНаСервере(
		Элементы.Список.ТекущиеДанные.ИсходящееСообщение,
		Элементы.Список.ТекущиеДанные.Узел,
		Элементы.Список.ТекущиеДанные.ОбработчикОтправки,
		Ложь // Удалить регистрацию
	);
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПосланиеИУдалитьРегистрацию(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
		
	КонецЕсли;
	
	ОтправитьПосланиеНаСервере(
		Элементы.Список.ТекущиеДанные.ИсходящееСообщение,
		Элементы.Список.ТекущиеДанные.Узел,
		Элементы.Список.ТекущиеДанные.ОбработчикОтправки,
		Истина // Удалить регистрацию
	);
	
	Элементы.Список.Обновить();
	
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРегламентное(Команда)
	
	ПереключитьРегламентноеНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПереключитьРегламентноеНаСервере()
	
	регламентное = Регламентное_Найти();
	
	использование = регламентное.Использование;
	
	регламентное.Использование = НЕ использование;
	регламентное.Записать();
	
	УправлениеДиалогом();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРазмерОчереди(Команда)
	
	размерОчереди = РазмерОчередиНаСервере();
	
	текстЗаголовка = СтрШаблон("%1 Размер очереди %2. Нажмите здесь чтобы пересчитать",
			Формат(ТекущаяДата(), "ДФ=HH:mm:ss"), // %1
			размерОчереди // %2
		);
	
	Элементы.ПоказатьРазмерОчереди.Заголовок = текстЗаголовка;
	
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаСервере
Функция РазмерОчередиНаСервере()
	
	размерОчереди = общ.ТаблицаФормыДинамическийСписок_Количество(ЭтаФорма.Элементы["Список"]);
	
	Возврат размерОчереди;
	
КонецФункции

&НаСервереБезКонтекста
Процедура УдалитьВсеНаСервере()
	РегистрыСведений.обм_КОтправке.УдалитьВсе();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВсе(Команда)
	УдалитьВсеНаСервере(); 
	Элементы.Список.Обновить();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ОтправитьПосланиеНаСервере(пИсходящееСообщение, пУзел, пОбработчик, пУдалитьРегистрацию)
	
	результат = РегистрыСведений.обм_КОтправке.ИсходящееСообщение_Отправить(пИсходящееСообщение, пУзел, пОбработчик);
	
	Если НЕ ПустаяСтрока(результат) Тогда
		сообщ = Новый СообщениеПользователю;
		сообщ.Текст = СокрЛП(результат);
		сообщ.Сообщить();
		
	КонецЕсли;
	
	Если пУдалитьРегистрацию Тогда
		РегистрыСведений.обм_КОтправке.УдалитьРегистрацию(пИсходящееСообщение, пУзел, пОбработчик);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция Регламентное_Найти()
	
	мета = Метаданные.РегламентныеЗадания.обм_Отправка_2_ИсходящиеСообщения_Отправить;
	регламентное = РегламентныеЗадания.НайтиПредопределенное(мета);
	
	Возврат регламентное;
	
КонецФункции

&НаСервере
Процедура УправлениеДиалогом()
	
	Если Элементы.Список.Видимость Тогда
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
	Если Элементы.ФормаПереключитьРегламентное.Видимость Тогда
		регламентное = Регламентное_Найти();
		
		заголовокКнопки = Неопределено;
		картинкаКнопки = Неопределено;
		Если регламентное.Использование Тогда
			заголовокКнопки = "Задание работает";
			картинкаКнопки = БиблиотекаКартинок.ОформлениеКругЗеленый;
			
		ИначеЕсли НЕ регламентное.Использование Тогда
			заголовокКнопки = "Задание отключено";
			картинкаКнопки = БиблиотекаКартинок.ОформлениеКругПустой;
			
		КонецЕсли;
		
		Элементы.ФормаПереключитьРегламентное.Заголовок = заголовокКнопки;
		Элементы.ФормаПереключитьРегламентное.Картинка = картинкаКнопки;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти