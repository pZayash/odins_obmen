&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УправлениеДиалогом();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьПослание(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
		
	КонецЕсли;
	
	ОтправитьПосланиеНаСервере(
		Элементы.Список.ТекущиеДанные.ИсходящееСообщение,
		Элементы.Список.ТекущиеДанные.Узел,
		Элементы.Список.ТекущиеДанные.ОбработчикОтправки,
		Ложь // Удалить регистрацию
		);
			
	Элементы.Список.Обновить();
	
КонецПроцедуры  

&НаКлиенте
Процедура ОтправитьПосланиеИУдалитьРегистрацию(Команда)
	
	Если Элементы.Список.ТекущиеДанные = Неопределено Тогда
		Возврат;
		
	КонецЕсли;
	
	ОтправитьПосланиеНаСервере(
		Элементы.Список.ТекущиеДанные.ИсходящееСообщение,
		Элементы.Список.ТекущиеДанные.Узел,
		Элементы.Список.ТекущиеДанные.ОбработчикОтправки,
		Истина // Удалить регистрацию
		);
			
	Элементы.Список.Обновить();

	
КонецПроцедуры  

&НаСервереБезКонтекста
Процедура ОтправитьПосланиеНаСервере(пИсходящееСообщение, пУзел, пОбработчик, пУдалитьРегистрацию)
	
	результат = РегистрыСведений.обм_КОтправке.ИсходящееСообщение_Отправить(пИсходящееСообщение, пУзел, пОбработчик);
	
	Если Не ПустаяСтрока(результат) Тогда
		сообщ = Новый СообщениеПользователю;
		сообщ.Текст = СокрЛП(результат);
		сообщ.Сообщить();
		
	КонецЕсли;
	
	Если пУдалитьРегистрацию Тогда
		РегистрыСведений.обм_КОтправке.УдалитьРегистрацию(пИсходящееСообщение, пУзел, пОбработчик);
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогом()
	
	Если Элементы.Список.Видимость Тогда
		Элементы.Список.Обновить();
		
	КонецЕсли; 
	
	Если Элементы.ФормаПереключитьРегламентное.Видимость Тогда
		регламентное = Регламентное_Найти();
		
		заголовокКнопки = Неопределено;
		картинкаКнопки = Неопределено;
		Если регламентное.Использование Тогда
			заголовокКнопки = "Задание работает";
			картинкаКнопки = БиблиотекаКартинок.ОформлениеКругЗеленый;
			
		ИначеЕсли Не регламентное.Использование Тогда
			заголовокКнопки = "Задание отключено";
			картинкаКнопки = БиблиотекаКартинок.ОформлениеКругПустой;
			
		КонецЕсли;

		Элементы.ФормаПереключитьРегламентное.Заголовок = заголовокКнопки;
		Элементы.ФормаПереключитьРегламентное.Картинка = картинкаКнопки;
					
	КонецЕсли; 		

КонецПроцедуры

&НаСервере
Процедура ПереключитьРегламентноеНаСервере()
	
	регламентное = Регламентное_Найти();
	
	использование = регламентное.Использование;
	
	регламентное.Использование = Не использование;
	регламентное.Записать();
	
	УправлениеДиалогом();

КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРегламентное(Команда)
	
	ПереключитьРегламентноеНаСервере();
	
КонецПроцедуры 

&НаСервере
Функция Регламентное_Найти()
	
	Возврат РегламентныеЗадания.НайтиПредопределенное(Метаданные.РегламентныеЗадания.обм_Отправка_2_ИсходящиеСообщения_Отправить);
	
КонецФункции

&НаКлиенте
Процедура ОткрытьСписокОбработчиков(Команда)
	
	ОткрытьФорму("Справочник.общ_Обработчики.ФормаСписка");
	
КонецПроцедуры

#Область КомандыФормы

&НаСервере
Функция РазмерОчередиНаСервере()

	размерОчереди = общ.ТаблицаФормыДинамическийСписок_Количество(ЭтаФорма.Элементы["Список"]);
	
	Возврат размерОчереди;
	
КонецФункции

&НаКлиенте
Процедура ПоказатьРазмерОчереди(Команда)
	
	размерОчереди = РазмерОчередиНаСервере();
	
	текстЗаголовка = СтрШаблон("%1 Размер очереди %2. Нажмите здесь чтобы пересчитать",
		Формат(ТекущаяДата(), "ДФ=HH:mm:ss"), // %1
		размерОчереди // %2
		);
	
	Элементы.ПоказатьРазмерОчереди.Заголовок = текстЗаголовка;
	
КонецПроцедуры

#КонецОбласти

