#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗарегистрироватьКОтправке(пИсходящиеСообщения) Экспорт
	
	ссылкиОбработчиковОтправки = 
		общ.Интерфейс_НайтиРеализации(Метаданные.Обработки.обм_ИсходящиеСообщения_СозданиеАдресацияОтправка_ПереопределяемыйИнтерфейс);

	Если ссылкиОбработчиковОтправки.Количество() = 0 Тогда
		Возврат;
		
	КонецЕсли;

	исходящиеСообщения = Новый Массив;
	Если ТипЗнч(пИсходящиеСообщения) = Тип("СправочникСсылка.обм_ИсходящиеСообщения") Тогда
		исходящиеСообщения.Добавить(пИсходящиеСообщения);
		
	ИначеЕсли ТипЗнч(пИсходящиеСообщения) = Тип("Массив") Тогда
		исходящиеСообщения = пИсходящиеСообщения;
		
	КонецЕсли;
	
	общ.Проверка_Тип(исходящиеСообщения, Тип("СправочникСсылка.обм_ИсходящиеСообщения"));
	
	запрос = Новый Запрос;
	запрос.УстановитьПараметр("исходящиеСообщения", исходящиеСообщения);
	запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	ИС.Ссылка КАК ИсходящееСообщение,
	|	ИС.ДатаВремя КАК ДатаВремя,
	|	ИСП.Узел КАК Узел
	|ИЗ
	|	Справочник.обм_ИсходящиеСообщения КАК ИС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.обм_ИсходящиеСообщения.Получатели КАК ИСП
	|		ПО ИС.Ссылка = ИСП.Ссылка
	|ГДЕ
	|	ИС.Ссылка В(&исходящиеСообщения)
	|	И ИС.ФлагОшибкиПриСоздании = ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИС.ДатаВремя";
	
	выборка = запрос.Выполнить().Выбрать();

	Пока выборка.Следующий() Цикл
		Если ПустаяСтрока(выборка.Узел) Тогда 
			Продолжить;
			
		КонецЕсли;
		
		Для Каждого обработчикСсылка Из ссылкиОбработчиковОтправки Цикл
			записьКОтправке = РегистрыСведений.обм_КОтправке.СоздатьМенеджерЗаписи();
			записьКОтправке.ОбработчикОтправки = обработчикСсылка;
			записьКОтправке.Узел = выборка.Узел;
			записьКОтправке.ИсходящееСообщение = выборка.ИсходящееСообщение;
			записьКОтправке.ДатаВремя = выборка.ДатаВремя;
			записьКОтправке.Записать();
			
		КонецЦикла;
		обработчикСсылка = Неопределено;
		
	КонецЦикла;
	выборка = Неопределено;
	
КонецПроцедуры

Функция СоздатьПоСсылкам(пСсылкиИсточников) Экспорт
	
	ссылкиИсточников = Новый Массив;
	Если ТипЗнч(пСсылкиИсточников) = Тип("Массив") Тогда
		ссылкиИсточников = пСсылкиИсточников;
		
	ИначеЕсли Общ.ЭтоЗаполненнаяСсылка(пСсылкиИсточников) Тогда
		ссылкиИсточников.Добавить(пСсылкиИсточников);
		
	КонецЕсли;
	
	исходящиеСообщения = Новый Массив;
	Если ссылкиИсточников.Количество() = 0 Тогда
		Возврат исходящиеСообщения;
		
	КонецЕсли;
	
	интерфейс = Обработки.обм_ИсходящиеСообщения_СозданиеАдресацияОтправка_ПереопределяемыйИнтерфейс.Создать();
	реализацииИнтерфейса = общ.Интерфейс_НайтиРеализации(интерфейс);
	
	Если реализацииИнтерфейса.Количество() = 0 Тогда
		Возврат исходящиеСообщения;
		
	КонецЕсли;
	
	Для Каждого обработчик ИЗ реализацииИнтерфейса Цикл
		общ.Интерфейс_УстановитьРеализацию(интерфейс, обработчик);
		Для Каждого источникСсылка Из ссылкиИсточников Цикл
			
			Если Не общ.ЭтоЗаполненнаяСсылка(источникСсылка) Тогда
				Продолжить;
				
			КонецЕсли;
			
			исходящие = интерфейс.ИсходящееСообщение_Создать(источникСсылка);
			
			Если исходящие = Неопределено Тогда
				Продолжить;
				
			КонецЕсли;
			
			Для Каждого исходящееОбъект Из исходящие Цикл
				Если ТипЗнч(исходящееОбъект) <> Тип("СправочникОбъект.обм_ИсходящиеСообщения") Тогда
					Продолжить;
				
				КонецЕсли;
				
				исходящееОбъект.Записать();
				
				исходящиеСообщения.Добавить(исходящееОбъект.Ссылка);

			КонецЦикла;
			исходящееОбъект = Неопределено;
			
		КонецЦикла;
		источникСсылка = Неопределено;
		
	КонецЦикла;
	обработчик = Неопределено;
	
	Возврат исходящиеСообщения;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#КонецЕсли // #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда