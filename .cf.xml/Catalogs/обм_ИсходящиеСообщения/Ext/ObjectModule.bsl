#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

#КонецОбласти

#Область ПрограммныйИнтерфейс

// Дозаполняет необходимые для работы алгоритмов обмена реквизиты
// Не перезаписывает, только дозаполняет пустые
//
// Параметры:
//  пИсточник			 - ЛюбаяСсылка, Строка -
//  пТекстСообщения		 - Строка -
//  пУзлыПолучатели		 - Строка - имена узлов-получателей, разделенные запятыми
//  пОбработчикОтправки	 - СправочникСсылка.общ_Обработчики -
//
Процедура Конструктор(пИсточник = Неопределено, пТекстСообщения = Неопределено, пУзлыПолучатели = Неопределено, пОбработчикОтправки = Неопределено) Экспорт
	
	исходящее = ЭтотОбъект;
	
	общ.ЕслиПустое(исходящее.Источник, пИсточник);
	общ.ЕслиПустое(исходящее.ТекстСообщения, пТекстСообщения);
	
	Если Получатели.Количество() = 0 Тогда
		узлы = СтрРазделить(пУзлыПолучатели, ",", Ложь);
		Для Каждого узел Из узлы Цикл
			рядПолучатель = исходящее.Получатели.Добавить();
			рядПолучатель.Узел = обм.УзелПривести(узел);
			
		КонецЦикла;
		узел = Неопределено;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(исходящее.ОбработчикОтправки) Тогда
		обработчик = Справочники.общ_Обработчики.НайтиСсылку(пОбработчикОтправки);
		исходящее.ОбработчикОтправки = обработчик;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ЭтоНовый() Тогда
		ДатаВремя = общ.ДатаУниверсальная();
		
	КонецЕсли;
	
	Получатели.Свернуть("Узел");
	Получатели.Сортировать("Узел");
	индекс = Получатели.Количество();
	Пока индекс > 0 Цикл
		индекс = индекс - 1;
		узел = обм.УзелПривести(Получатели[индекс].Узел);
		Если Не ПустаяСтрока(узел) Тогда
			Получатели[индекс].Узел = узел;
			
		Иначе
			Получатели.Удалить(индекс);
			
		КонецЕсли;
		
	КонецЦикла;
	индекс = Неопределено;
	
	всеПолучатели = Получатели.ВыгрузитьКолонку("Узел");
	ПолучателиСтрокой = СтрСоединить(всеПолучатели, ",");
	
	Если ПустаяСтрока(Наименование) Тогда
		Наименование = Строка(Источник) + " >>>> " + ПолучателиСтрокой;
		
	КонецЕсли;
	
	УзелОтправительИсточника = обм.УзелПривести(УзелОтправительИсточника);
	
КонецПроцедуры

#КонецОбласти // Обработчики событий

#Область СлужебныйПрограммныйИнтерфейс
// Код процедур и функций
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
// Код процедур и функций
#КонецОбласти

#Область Инициализация

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.'");
#КонецЕсли