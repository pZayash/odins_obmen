#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ОбновитьПриемники(пПакетыДанных) Экспорт
	
	Если пПакетыДанных.Количество() = 0 Тогда
		Возврат;
		
	КонецЕсли;
	
	обработчик = Обработки.обм_ПакетыДанных_Обработка.Создать();
	
	Для Каждого пакетСсылка Из пПакетыДанных Цикл
		обработчик.ПакетДанных_Обработать(пакетСсылка);
		
	КонецЦикла;
	пакетСсылка = Неопределено;
	
КонецПроцедуры

Функция КонструкторПакета(
		пВходящееСообщениеВладелец, 
		пУзел, пКатегория, пИдентификатор, пДанные = Неопределено,
		пОтказСозданияНовогоПриемника = Ложь, пОтказПерезаписиПриемника = Ложь		) Экспорт
	
	общ.Проверка_Тип(пВходящееСообщениеВладелец, Тип("СправочникСсылка.обм_ВходящиеСообщения"));
	
	Если ПустаяСтрока(пУзел) Тогда
		ВызватьИсключение "Не заполнен параметр 'узел'";
		
	КонецЕсли;
	
	Если ПустаяСтрока(пУзел) Тогда
		ВызватьИсключение "Не заполнен параметр 'категория'";
		
	КонецЕсли;
	
	Если ПустаяСтрока(пИдентификатор) Тогда
		ВызватьИсключение "Не заполнен параметр 'идентификатор'";
		
	КонецЕсли;
	
	запрос = Новый Запрос;
	запрос.УстановитьПараметр("пВходящееСообщениеВладелец", пВходящееСообщениеВладелец);
	запрос.УстановитьПараметр("Узел", пУзел);
	запрос.УстановитьПараметр("Категория", пКатегория);
	запрос.УстановитьПараметр("Идентификатор", пИдентификатор);
	запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПакетыДанных.Ссылка КАК ПакетДанных
	|ИЗ
	|	Справочник.обм_ПакетыДанных КАК ПакетыДанных
	|ГДЕ
	|	ПакетыДанных.Владелец = &пВходящееСообщениеВладелец
	|	И ПакетыДанных.Узел = &Узел
	|	И ПакетыДанных.Категория = &Категория
	|	И ПакетыДанных.Идентификатор = &Идентификатор";
	
	выборка = запрос.Выполнить().Выбрать();
	
	пакетДанныхОбъект = Неопределено;
	Если выборка.Следующий() Тогда
		пакетДанныхОбъект = выборка.ПакетДанных.ПолучитьОбъект();

	Иначе
		пакетДанныхОбъект = Справочники.обм_ПакетыДанных.СоздатьЭлемент();
		
	КонецЕсли; 
	
	пакетДанныхОбъект.Владелец = пВходящееСообщениеВладелец;
	пакетДанныхОбъект.ДатаВремя = общ.ЗначениеРеквизитаОбъекта(пВходящееСообщениеВладелец, "ДатаВремя");
	пакетДанныхОбъект.ПометкаУдаления = Ложь;
	пакетДанныхОбъект.Узел = пУзел;
	пакетДанныхОбъект.Категория = пКатегория;
	пакетДанныхОбъект.Идентификатор = пИдентификатор;
	пакетДанныхОбъект.Данные = пДанные; 
	
	пакетДанныхОбъект.ОтказПерезаписиПриемника = пОтказПерезаписиПриемника;
	пакетДанныхОбъект.ОтказСозданияНовогоПриемника = пОтказСозданияНовогоПриемника;
	
	Возврат пакетДанныхОбъект;
	
КонецФункции

#КонецОбласти // ПрограммныйИнтерфейс

#КонецЕсли // #Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
