Функция ВыполнитьОбработчик(Знач пОбработчик, Знач пИсточник, пПараметры = Неопределено) Экспорт
	
	// Для контекстной подсказки
	Если Ложь Тогда
		пОбработчик = Справочники.общ_Обработчики.ПустаяСсылка();
		
	КонецЕсли;
	
	стрСкрипт = "";
	Если ТипЗнч(пОбработчик) = Тип("СправочникСсылка.общ_Обработчики") Тогда
		стрСкрипт = пОбработчик.Скрипт;
		
	Иначе
		стрСкрипт = "";
		
	КонецЕсли;
		
	Если ПустаяСтрока(стрСкрипт) Тогда
		Возврат Неопределено;
		
	КонецЕсли;

	Результат = Неопределено;
	Попытка
		Выполнить стрСкрипт;
			
	Исключение
		имяСобытия = 
			общ.ИмяСобытияЖурналаРегистрации(
				СтрШаблон(
					"общ.ВыполнитьОбработчик%1%2",
					?(ПустаяСтрока(пОбработчик.ИмяПредопределенныхДанных), "", "."), // %1
					?(ПустаяСтрока(пОбработчик.ИмяПредопределенныхДанных), "", пОбработчик.ИмяПредопределенныхДанных) // %2
					)
				);
				
		стрОбОшибке = 
			СтрШаблон(
				"Ошибка при выполнении обработчика '%1' для источника '%2' (тип %3)
				|%4",
				пОбработчик, // %1 
				пИсточник, // %2
				ТипЗнч(пИсточник), // %3
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()) // %4
				); 
				
		ЗаписьЖурналаРегистрации(
			имяСобытия,
			УровеньЖурналаРегистрации.Ошибка,
			Метаданные.Справочники.общ_Обработчики,
			пОбработчик,
			стрОбОшибке,
			РежимТранзакцииЗаписиЖурналаРегистрации.Независимая
			);				
			
		Результат = ИнформацияОбОшибке();
		
	КонецПопытки;
	
	Возврат Результат;
	
КонецФункции

Функция ОписаниеОбработчика(пОбработчик) Экспорт
	
	обработчикСсылка = общ.Ссылка_Получить(пОбработчик);
	
	#Область обм_Измененные_Адресация
	Если обработчикСсылка = Справочники.общ_Обработчики.обм_Измененные_Адресация Тогда 
		
		Если Ложь Тогда
			// Для справки. см —>
			обм.Отправка_АдресацияИзмененных();
			
		КонецЕсли;
		
		Возврат 
		"Скрипт обрабатывает предопределенное действие определения получателей данных при обмене
		|В выходной параметр необходимо поместить массив наименований узлов получателей
		|		
		|	Результат = Новый Массив;
		|
		|В тексте скрипта доступны переменные:
		|пИсточник — любая ссылка, для которой необходимо получить адреса получателей;
		|пПараметры — структура со следующими полями:
		|	ВерсияДанных - строка, версия данных источника
		|	УзелОтправитель - строка, идентификатор узла, из которого поступили данные
		|	Категория - строка, идентификатор типа данных, как правило имя таблицы БД, например 'Справочник.Контрагенты'
		|	Идентификатор - строка, идентификатор объекта, с которого сформировано послание. Как правило GUID справочника или документа.
		|Результат — массив наименований узлов-получателей;
		|			Как вариант можно вернуть имена узлов в виде строки, разделенной запятыми;
		|			
		|			Если необходимо по одной ссылке отправить несколько, например при записи договора нужно отправить контрагента-владельца договора,
		|			тогда в результат можно поместить соответсвие, ключами соответсвий будут ссылки, а значениями массивы имен узлов, куда надо отправить сообщения"; 
		
	#КонецОбласти // обм_Измененные_Адресация
	
	#Область обм_Измененные_РегистрироватьПриЗаписи
	ИначеЕсли обработчикСсылка = Справочники.общ_Обработчики.обм_Измененные_РегистрироватьПриЗаписи Тогда 
		
		Если Ложь Тогда
			// Для справки, см —>
			обм.ПриЗаписи(Неопределено, Неопределено);
			
		КонецЕсли;
		
		Возврат
		"При записи в режиме пИсточник.ОбменДанными.Загрузка = Ложь,
		|скрипт проверяет необходимость регистрации ссылки на пИсточник для обмена в РегистрСведений.обм_Измененные
		|
		|В выходной параметр необходимо поместить 
		|	вариант 1: булево, решение о необходимости регистрации
		|	вариант 2: массив ссылок, которые необходимо зарегистрировать
		|
		|В тексте скрипта доступные переменные:
		|пИсточник — любая ссылка, для которой необходимо принять решение о регистрации для обмена;
		|пПараметры — структура с одним поле ДополнительныеСвойства, содержит ДополнительныеСвойства объекта, от которого получена ссылка;
		|Результат — булево, необходимость регистрации источника для обмена;"; 
		
	#КонецОбласти // обм_Измененные_РегистрироватьПриЗаписи	
	
	#Область обм_Измененные_РегистрироватьПриПоступленииПоОбмену
	ИначеЕсли обработчикСсылка = Справочники.общ_Обработчики.обм_Измененные_РегистрироватьПриПоступленииПоОбмену Тогда
		
		Если Ложь Тогда
			// Для справки, см —>
			обм.ПриЗаписи(Неопределено, Неопределено);
			
		КонецЕсли;
		
		Возврат
		"При записи в режиме пИсточник, поступившего по обмену через Справочник.обм_ВходящиеСообщения/Справочник.обм_ДанныеЗаполнения,
		|скрипт проверяет необходимость регистрации ссылки на пИсточник для обмена в РегистрСведений.обм_Измененные
		|
		|В выходной параметр необходимо поместить 
		|	вариант 1: булево, решение о необходимости регистрации
		|	вариант 2: массив ссылок, которые необходимо зарегистрировать
		|
		|В тексте скрипта доступные переменные:
		|пИсточник — любая ссылка, для которой необходимо принять решение о регистрации для обмена;
		|пПараметры — структура с одним поле ДополнительныеСвойства, содержит ДополнительныеСвойства объекта, от которого получена ссылка;
		|				пПараметры.ДополнительныеСвойства.УзелОтправитель - Строка, узел, с которого получен объект
		|				пПараметры.ДополнительныеСвойства.Категория - Строка, категория объекта
		|				пПараметры.ДополнительныеСвойства.Идентификатор - Строка, идентифиикатор объекта
		|Результат — булево, необходимость регистрации источника для обмена;"; 
		
	#КонецОбласти // обм_Измененные_РегистрироватьПриПоступленииПоОбмену
	
	#Область обм_ОтправитьПослание
	ИначеЕсли обработчикСсылка = Справочники.общ_Обработчики.обм_ОтправитьПослание Тогда
		Если Ложь Тогда
			// Для справки, см —>
			//обм.Послание_Отправить();
			
		КонецЕсли;
		
		Возврат
		"Скрипт отправляет данные по назначению
		|В выходной параметр можно передать результат отправки
		|
		|пПараметры — Структура, поля описаны ниже. Обязательные поля Послание и Узел, остальные могут отсутствовать
		|	Послание - строка, данные которые необходимо передать
		|	Узел - строка, идентификатор приемника
		|	Категория - строка, идентификатор типа данных, как правило имя таблицы БД, например 'Справочник.Контрагенты'
		|	Идентификатор - строка, идентификатор объекта, с которого сформировано послание. Как правило GUID справочника или документа.
		|	;
		|Результат — произвольный, результат отправки. При ошибке отправки следует вызвать исключение;"; 
		
	#КонецОбласти // обм_ОтправитьПослание
	
	#Область обм_СфомироватьОбразОбъекта
	ИначеЕсли обработчикСсылка = Справочники.общ_Обработчики.обм_СфомироватьОбразОбъекта Тогда
		Возврат
		"Скрипт предназначен для формирования образов ссылочных объектов для обмена, без учета места назначения — узла-приемника
		|Сформированный образ надо поместить в параметр Результат
		|Внутри скрипта доступны следующие переменные:
		|
		|пОбработчик — ссылка на этот элемент; 
		|пИсточник — ссылка или прикладной объект, образ которого необходимо получить;
		|
		|Результат — выходной параметр. Сюда необходимо поместить сформированный образ объекта или неопределено. Ожидаемые типы: строка, структура, соответствие или неопределено;";
	
	#КонецОбласти // обм_СфомироватьОбразОбъекта
	
	#Область обм_СфомироватьОбразОбъектаДляУзла
	ИначеЕсли обработчикСсылка = Справочники.общ_Обработчики.обм_СфомироватьОбразОбъектаДляУзла Тогда
		Возврат
		"Скрипт предназначен для формирования образов ссылочных объектов для обмена, с учетом специфики места назначения — узла-приемника
		|Сформированный образ надо поместить в параметр Результат
		|Внутри скрипта доступны следующие переменные:
		|
		|пОбработчик — ссылка на этот элемент;
		|пИсточник — ссылка или прикладной объект, образ которого необходимо получить;
		|пПараметры — Структура, поля описаны ниже. 
		|	Ссылка - ссылка или прикладной объект, равна параметру пИсточник
		|	Узел - строка, идентификатор приемника
		|	;
		|
		|Результат — выходной параметр. Сюда необходимо поместить сформированынный образ объекта или неопределено. Ожидаемые типы: строка, структура, соответствие или неопределено;";
	
	#КонецОбласти // обм_СфомироватьОбразОбъектаДляУзла
	
	Иначе
		// Описание по умолчанию
		Возврат 
		"В тексте скрипта ниже доступны следующие переменные контекста:
		|пОбработчик — ссылка на этот элемент; 
		|пИсточник — произвольный, объект над которым должна быть выполнена операция;
		|пПараметры — произвольный, дополнительные параметры;
		|Результат — выходной параметр. Значение, помещенное сюда, будет возвращено вызывающему коду;";
		
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции