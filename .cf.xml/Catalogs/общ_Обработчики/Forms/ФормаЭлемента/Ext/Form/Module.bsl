#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		ЗагрузитьИзФайла();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда = Неопределено)

	фильтр = СтрШаблон("Внешние обработки (*.%1)|*.%1", "epf");
	параметрыДиалога = Новый ПараметрыДиалогаПомещенияФайлов("Выберите обработчик", Ложь, фильтр);
	
	оповещение = Новый ОписаниеОповещения("ПослеЗакрытияДиалогаВыбораФайла", ЭтаФорма);
	НачатьПомещениеФайлаНаСервер(оповещение,,,, параметрыДиалога, УникальныйИдентификатор);

КонецПроцедуры

#КонецОбласти // ОбработчикиКомандФормы

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПослеЗакрытияДиалогаВыбораФайла(ОписаниеФайла, ДопПараметры) Экспорт
	
	Если ОписаниеФайла = Неопределено Или ОписаниеФайла.ПомещениеФайлаОтменено Тогда
		Возврат;
	КонецЕсли;
	
	ФайлНаСервереВХранилищеОбработчика(ОписаниеФайла.Адрес);
	
КонецПроцедуры

&НаСервере
Процедура ФайлНаСервереВХранилищеОбработчика(пАдресХранилища)

	Если Не ЭтоАдресВременногоХранилища(пАдресХранилища) Тогда 
		Возврат;
		
	КонецЕсли;
	
	справочникОбъект = РеквизитФормыВЗначение("Объект");
	
	двоичныеДанныеФайла = ПолучитьИзВременногоХранилища(пАдресХранилища);
	путьКФайлу = ПолучитьИмяВременногоФайла("epf");
	двоичныеДанныеФайла.Записать(путьКФайлу);

	текущийБезопасныйРежим = БезопасныйРежим();
	Если текущийБезопасныйРежим <> Ложь Тогда
		УстановитьОтключениеБезопасногоРежима(Истина);
				
	КонецЕсли;
			
	безЗащиты = Новый ОписаниеЗащитыОтОпасныхДействий;
	безЗащиты.ПредупреждатьОбОпасныхДействиях = Ложь;
		
	внешняяОбработка = ВнешниеОбработки.Создать(путьКФайлу, Ложь, безЗащиты);
	
	справочникОбъект.ВерсияИнтерфейса = внешняяОбработка.ВерсияИнтерфейса();
	справочникОбъект.Комментарий = внешняяОбработка.Метаданные().Комментарий;
	справочникОбъект.Наименование = внешняяОбработка.Метаданные().Имя;
	
	справочникОбъект.Синоним = внешняяОбработка.Метаданные().Синоним;
	справочникОбъект.ХранилищеОбработчика = Новый ХранилищеЗначения(двоичныеДанныеФайла);
	
	справочникОбъект.Записать();
	
	ЗначениеВРеквизитФормы(справочникОбъект, "Объект");

КонецПроцедуры

#КонецОбласти // СлужебныеПроцедурыИФункции
