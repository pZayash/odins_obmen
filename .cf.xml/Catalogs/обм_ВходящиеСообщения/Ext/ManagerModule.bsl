Функция Статус_Получить(пВходящееСообщениеСсылка) Экспорт 

	Если 
			Не Общ.ЭтоЗаполненнаяСсылка(пВходящееСообщениеСсылка, Тип("СправочникСсылка.обм_ВходящиеСообщения"))
	Тогда
		Возврат Неопределено;
		
	КонецЕсли;

	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("пВходящееСообщениеСсылка", пВходящееСообщениеСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Статус КАК Статус
	|ИЗ
	|	РегистрСведений.обм_ВходящиеСообщения_Статусы.СрезПоследних(, ВходящееСообщение = &пВходящееСообщениеСсылка) КАК Т";
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Статус;
		
	Иначе
		Возврат Неопределено;
		
	КонецЕсли;
	
КонецФункции

Процедура Статус_Установить(пВходящееСообщениеСсылка, пСтатус, пПримечание = Неопределено) Экспорт
	
	Если 
			Не Общ.ЭтоЗаполненнаяСсылка(пВходящееСообщениеСсылка, Тип("СправочникСсылка.обм_ВходящиеСообщения"))
		Или	Не Общ.ЭтоЗаполненнаяСсылка(пСтатус, Тип("ПеречислениеСсылка.обм_ВходящиеСообщения_Статусы")) 
	Тогда
		Возврат;
		
	КонецЕсли;

	стрПримечание = Неопределено;
	
	Если ТипЗнч(пПримечание) = Тип("Строка") Тогда
		стрПримечание = пПримечание;
		
	ИначеЕсли ТипЗнч(пПримечание) = Тип("Структура") Или ТипЗнч(пПримечание) = Тип("Соответствие") Тогда 
		стрПримечание = "";
		Для Каждого Пара Из пПримечание Цикл
			стрПримечание = стрПримечание + СокрЛП(Пара.Ключ);
			
			стрЗначение = СокрЛП(Пара.Значение);
			
			Если Не ПустаяСтрока(стрЗначение) Тогда
				стрПримечание = стрПримечание + "=" + стрЗначение;
				
			КонецЕсли;
			
			стрПримечание = стрПримечание + "; ";
			
		КонецЦикла;
		Пара = Неопределено;
		
		стрПримечание = СокрЛП(стрПримечание);
		
	ИначеЕсли ТипЗнч(пПримечание) = Тип("Неопределено") Тогда
		стрПримечание = Неопределено;
		
	Иначе
		стрПримечание = Строка(пПримечание);
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВходящееСообщение", пВходящееСообщениеСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Статус КАК Статус,
	|	Т.Примечание КАК Примечание
	|ИЗ
	|	РегистрСведений.обм_ВходящиеСообщения_Статусы.СрезПоследних(, ВходящееСообщение = &ВходящееСообщение) КАК Т";
	
	Выборка = Запрос.Выполнить().Выбрать();
	ТекущийСтатус = Неопределено;
	ТекущееПримечание = Неопределено;
	Если Выборка.Следующий() Тогда
		ТекущийСтатус = Выборка.Статус;
		ТекущееПримечание = Выборка.Примечание;
		
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ТекущийСтатус) Тогда
		ТекущийСтатус = Неопределено;
		
	КонецЕсли;

	// Если текущий статус совпадает с устанавливаемым, прервать обработку
	Если ТекущийСтатус = пСтатус И ТекущееПримечание = стрПримечание Тогда
		Возврат;
		
	КонецЕсли;
	
	// При штатном течении процесса обработки
	// При установке статуса Обработан после статуса ЖдетОбработки
	// Если Примечание не заполнено
	// Взять текущее примечание статуса
	Если 
			пСтатус = Перечисления.обм_ВходящиеСообщения_Статусы.Обработан
		И	ПустаяСтрока(стрПримечание)
		И	ТекущийСтатус = Перечисления.обм_ВходящиеСообщения_Статусы.ЖдетОбработки
	Тогда
		стрПримечание = ТекущееПримечание; 

	// При штатном переходе между статусами добавить новое примечание к старому
	// ЖдетОбработки —> НеОбрабатывается
	// ЖдетОбработки —> Обработан
	// ЖдетОбарботки —> Обработан с ошикой
	ИначеЕсли
			ТекущийСтатус = Перечисления.обм_ВходящиеСообщения_Статусы.ЖдетОбработки
		И   (
					пСтатус = Перечисления.обм_ВходящиеСообщения_Статусы.НеОбрабатывается
				Или	пСтатус = Перечисления.обм_ВходящиеСообщения_Статусы.Обработан
				Или пСтатус = Перечисления.обм_ВходящиеСообщения_Статусы.ОбработанСОшибкой
				)
	Тогда
		стрПримечание = СокрЛП(ТекущееПримечание + " " + стрПримечание);
		
	КонецЕсли;
	
	МенеджерЗаписи = РегистрыСведений.обм_ВходящиеСообщения_Статусы.СоздатьМенеджерЗаписи();
	МенеджерЗаписи.ВходящееСообщение = пВходящееСообщениеСсылка;
	МенеджерЗаписи.Статус = пСтатус;
	МенеджерЗаписи.Примечание = стрПримечание;
	МенеджерЗаписи.Период = ТекущаяДата();
	МенеджерЗаписи.Записать();
	
КонецПроцедуры

Функция Параметр_Значение_Получить(пВходящееСообщениеСсылка, КлючПараметра) Экспорт
	
	Для Каждого СтрокаТЧ Из пВходящееСообщениеСсылка.Параметры Цикл
		Если ВРЕГ(СтрокаТЧ.Ключ) = ВРЕГ(КлючПараметра) Тогда
			Возврат СтрокаТЧ.Значение;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Null;
	
КонецФункции  

Функция Параметр_Существует(пВходящееСообщениеСсылка, КлючПараметра) Экспорт
	
	Возврат Справочники.обм_ВходящиеСообщения.Параметр_Значение_Получить(пВходящееСообщениеСсылка, КлючПараметра) <> Null	
	
КонецФункции



