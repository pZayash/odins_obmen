#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	общ.ФормаСпискаКакФормаВыбора(ЭтаФорма);
	
	НастройкиОтбораУстановить();
		
КонецПроцедуры
	
&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ВходящиеСообщения_ИзмененыСтатусы" Тогда
		УправлениеДиалогом();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти // ОбработчикиСобытийФормы

&НаСервере
Процедура ЗапуститьОчередьНаСервере()

	обм.Получение_ОбработатьОчередь();

КонецПроцедуры

&НаКлиенте
Процедура ЗапуститьОчередь(Команда)
	
	ЗапуститьОчередьНаСервере();
	
	ПодключитьОбработчикОжидания("ВходящиеСообщения_ИзмененыСтатусы", 3, Истина);	
	
КонецПроцедуры

&НаКлиенте
Процедура ВходящиеСообщения_ИзмененыСтатусы()
	
	Оповестить("ВходящиеСообщения_ИзмененыСтатусы");
	
КонецПроцедуры

&НаСервере
Процедура НастройкиОтбораУстановить() 
	
	Список.Параметры.УстановитьЗначениеПараметра("ОтборСтатус", ОтборСтатус);
	УправлениеДиалогом();
	
КонецПроцедуры

&НаСервере
Процедура НастройкиОтбораПриИзмененииНаСервере() 
	
	НастройкиОтбораУстановить();
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиОтбораПриИзменении(Элемент) 
	
	НастройкиОтбораПриИзмененииНаСервере();

КонецПроцедуры

&НаСервере
Процедура УправлениеДиалогом()
	
	Если Элементы.Список.Видимость Тогда
		Элементы.Список.Обновить();
		
	КонецЕсли; 
	
	Если Элементы.ФормаПереключитьРегламентное.Видимость Тогда
		регламентное1 = 
			РегламентныеЗадания.НайтиПредопределенное(
				Метаданные.РегламентныеЗадания.обм_Получение_1_ПакетыДанных_Извлечь
				);
		регламентное2 = 
			РегламентныеЗадания.НайтиПредопределенное(
				Метаданные.РегламентныеЗадания.обм_Получение_2_ПакетыДанных_Обработать
				);
		
		заголовокКнопки = Неопределено;
		картинкаКнопки = Неопределено;
		Если регламентное1.Использование И регламентное2.Использование Тогда
			заголовокКнопки = "Задание работает";
			картинкаКнопки = БиблиотекаКартинок.ОформлениеКругЗеленый;
			
		ИначеЕсли Не регламентное1.Использование И Не регламентное2.Использование Тогда
			заголовокКнопки = "Задание отключено";
			картинкаКнопки = БиблиотекаКартинок.ОформлениеКругПустой;
			
		Иначе
			заголовокКнопки = "Задание частично отключено";
			картинкаКнопки = БиблиотекаКартинок.ОформлениеКругЖелтый;
			
		КонецЕсли;

		Элементы.ФормаПереключитьРегламентное.Заголовок = заголовокКнопки;
		Элементы.ФормаПереключитьРегламентное.Картинка = картинкаКнопки;
					
	КонецЕсли; 		

КонецПроцедуры

&НаСервере
Процедура ПереключитьРегламентноеНаСервере()
	
	регламентное1 = 
		РегламентныеЗадания.НайтиПредопределенное(
			Метаданные.РегламентныеЗадания.обм_Получение_1_ПакетыДанных_Извлечь
			);
	регламентное2 = 
		РегламентныеЗадания.НайтиПредопределенное(
			Метаданные.РегламентныеЗадания.обм_Получение_2_ПакетыДанных_Обработать
			);
	
	использование = регламентное1.Использование Или регламентное2.Использование;
	
	регламентное1.Использование = Не использование;
	регламентное1.Записать();
	
	регламентное2.Использование = Не использование;
	регламентное2.Записать(); 
	
	УправлениеДиалогом();

КонецПроцедуры

&НаКлиенте
Процедура ПереключитьРегламентное(Команда)
	ПереключитьРегламентноеНаСервере();
КонецПроцедуры   

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные = Неопределено Или ТипЗнч(Поле) <> Тип("ПолеФормы") Тогда 
		Возврат;
		
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "ПоследнийПриемник" Тогда
		последнийПриемникСсылка = СписокВыбор_СсылкаПоследнегоПриемникаНаСервере(Элемент.ТекущиеДанные.ПоследнийПриемник);
		ПоказатьЗначение(,последнийПриемникСсылка);
		
	ИначеЕсли Поле.Имя = "Примечание" Тогда
		текст = Новый ТекстовыйДокумент;
		текст.УстановитьТекст(Элемент.ТекущиеДанные.Примечание);
		текст.Показать("Примечание об обработке входящего сообщения " + Элемент.ТекущиеДанные.Наименование);
		
	Иначе
		СтандартнаяОбработка = Истина;

	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция СписокВыбор_СсылкаПоследнегоПриемникаНаСервере(пПоследнийПриемникСтрВнутр)
	
	Возврат ЗначениеИзСтрокиВнутр(пПоследнийПриемникСтрВнутр);	

КонецФункции

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для Каждого строкаДинСписка Из Строки Цикл
		последнийПриемник = строкаДинСписка.Значение.Данные.ПоследнийПриемник; 
		Если ПустаяСтрока(последнийПриемник) Тогда
			Продолжить;
			
		КонецЕсли;
		
		последнийПриемникСсылка = ЗначениеИзСтрокиВнутр(последнийПриемник);
		
		оформлениеПП = строкаДинСписка.Значение.Оформление.Получить("ПоследнийПриемник");
		
		Если оформлениеПП = Неопределено Тогда
			Продолжить;
			
		КонецЕсли;
		
		оформлениеПП.УстановитьЗначениеПараметра("Текст", Строка(последнийПриемникСсылка));
		
	КонецЦикла;
	строкаДинСписка = Неопределено;
	
КонецПроцедуры
